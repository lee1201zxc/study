BFS(Breadth First Search) : 너비 우선 탐색
그래프나 트리에서 노드를 방문하는 방법중 하나+배열, 가까운 노드부터 방문한다.
첫 번재 노드를 방문하고 그 노드와 연결된 주위 노드들을 방문, 그리고 방문한 노드와 연결된 주위 노드들을 방문.... 탐색이 완료될 때 까지 반복.


구현
준비 : 배열or리스트(그래프 구현), 큐(방문할 노드 표시)
1. 시작하는 노드에 방문했다는 표시를 남기고 큐에 넣음.
2. 큐에서 원소(위치)를 꺼내 그 노드와 연결된 모든 노드 확인 후 방문 안했다면 큐에 넣음.
3.(2)번을 탐색이 완료될때(큐가 비워질때)까지 반복
시간 복잡도 : O(N)
특징 : 무한한 굴레에 빠질 수 있음(특정 가지가 무한의 길이를 가지면), 미로제작시 사용되기도 함.



DFS(Depth First Search) : 깊이 우선 탐색
그래프나 트리에서 노드를 방문하는 방법중 하나+배열, 특정 노드부터 시작해 들어갈 수 있는 가장 깊이 들어간 다음 빠져나오면서 
다른 노드들을 방문, 탐색이 완료될 때 까지 반복.


구현
준비 : 배열or리스트(그래프 구현), 스택(방문할 노드 표시)
1.시작하는 노드에 방문했다는 표시를 남기고 스택에 넣음.
2. 스택에서 원소(위치)를 꺼내 그 노드와 연결된 모든 노드에 방문했다는 표시 남기고 스택에 추가. 이때 연결된 노드가 존재했다면 꺼낸 원소도 다시 스택에 먼저넣음
3.(2)번을 탐색이 완료될때(스택이 비워질때)까지 반복 *BFS와 거의 비슷.
시간 복잡도 : O(N)
특징 : 시작지점에서 끝지점 까지의 최단,최대거리를 구할 수 있다.



*트리,그래프,2차원 배열등 여러 구조에서 이용할 수 있음.
