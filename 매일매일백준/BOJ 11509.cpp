#include<iostream>
using namespace std;
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n,ans=0;
    cin>>n;
    int k,b[1000001]={0,};
    for(int i=0;i<n;i++)
    {
        cin>>k;
        if(b[k]!=0)
        {
            b[k-1]++;
            b[k]--;
        }
        else
        {
            b[k-1]++;
            ans++;
        }
    }
    cout<<ans;
}
/*
 이 문제는 그리디 문제이다.
 풍선의 위치를 하나하나보면서 화살이 더 필요할지 안필요할지 정해줘야 한다.
 처음에 풍선의 높이를 본다. 처음에는 던져진 화살이 없으므로 화살 하나를 추가해준다. 풍선의 높이가 H였다면 화살 하나가 풍선을
 맞히고 나서 화살의 높이는 H-1이 되고 이를 기록해둔다. 그 다음 풍선의 높이를 본다. 풍선의 높이에 화살이 하나라도 있다면 그 화살을 이용해
 풍선을 터뜨려주고 화살의 높이를 1줄여준다. 만약 화살이 없었더라면 화살 하나를 추가해준다.... 이를 끝까지 반복하여 화살의 개수를 구해주면 된다.
*/
